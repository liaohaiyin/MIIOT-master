<UserControl x:Class="MIIOT.Trical.View.ApplyBackView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MIIOT.Trical.View"
               xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:converter="clr-namespace:MIIOT.Trical.Converter"
             xmlns:calc="clr-namespace:CalcBinding;assembly=CalcBinding"
             xmlns:controls="clr-namespace:MIIOT.Controls;assembly=MIIOT.Controls"
             xmlns:control="clr-namespace:MIIOT.Trical.Controls"
             xmlns:trical="clr-namespace:MIIOT.Trical"
             xmlns:Ccontrol="clr-namespace:MIIOT.Controls;assembly=MIIOT.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converter:OppositeVisible x:Key="OppositeConverter"/>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="25"/>
        </Style>
        <DataTemplate x:Key="txtQty">
            <!--<TextBox Text="{Binding Qty}"></TextBox>-->
            <Ccontrol:TextBoxNumberUpADown Tag="{Binding}" Text="{Binding Qty,Mode=TwoWay}" Height="auto"/>
        </DataTemplate>
        <converter:btnDeteleConverter x:Key="btnDeteleConverter"/>
        <converter:bool2colorVisible x:Key="bool2colorVisible"/>
        <converter:bool2ForecolorVisible x:Key="bool2ForecolorVisible"/>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition  Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Margin="15 15 15 0">
            <materialDesign:ColorZone Mode="Standard"   CornerRadius="2" Panel.ZIndex="1"
                                    Width="400" HorizontalAlignment="Left" Height="50"  BorderBrush="{StaticResource PrimaryHueMidBrush}" BorderThickness="1"
                                   materialDesign:ShadowAssist.ShadowDepth="Depth1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <materialDesign:PackIcon Kind="BarcodeScan"  Foreground="#8c8c8c" Opacity=".76" Margin="5 0 0 0" VerticalAlignment="Center" Width="30" Height="40"/>
                    <TextBox x:Name="txtBarcode" Grid.Column="1" Margin="8 0 0 0" CaretBrush="Black"  materialDesign:HintAssist.Hint="请扫描或输入单号" KeyDown="txtBarcode_KeyDown"
                                     materialDesign:TextFieldAssist.DecorationVisibility="Hidden" BorderThickness="0" FontSize="20"
                                     MinWidth="200" VerticalAlignment="Center" />
                    <control:KeyboardShow Kind="Keyboard" Background="White" Margin="0 0 5 0"  Grid.Column="2" Opacity=".76"  VerticalAlignment="Center" Width="30" Height="30" />
                </Grid>

            </materialDesign:ColorZone>
            <TextBlock x:Name="txtifNull" Visibility="Collapsed" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="18" Foreground="Red"  Margin="5 0">无结果，请重试</TextBlock>
            <TextBox x:Name="txttest"  Visibility="Collapsed" Width="200"  Margin="60 0 0 0" Background="White" KeyDown="TextBox_KeyDown"></TextBox>

        </StackPanel>
        <Grid Grid.Row="1" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <materialDesign:Card Margin="7" HorizontalAlignment="Left" Visibility="{calc:Binding ElementName=listCodes, Path=Items.Count less 1}"  Height="90" Width="200" FontSize="18" >
                <TextBlock Text="列表为空" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
            </materialDesign:Card>
            <ListView x:Name="listCodes" SelectedIndex="0" Height="auto" AllowDrop="True" SelectionMode="Extended"  Grid.Row="1" SelectionChanged="ListView_SelectionChanged" ItemsSource="{Binding ApplyBackInfos}">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                            AncestorType={x:Type ListViewItem}},  Path=IsSelected}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="ItemsControl.Background" Value="Red"/>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                        <materialDesign:Card Margin="5" Foreground="{Binding IsChecked,Converter={StaticResource bool2ForecolorVisible}}" Background="{Binding IsChecked,Converter={StaticResource bool2colorVisible}}"  Height="90" Width="200" FontSize="18" >
                            <TextBlock Text="{Binding sourceNo}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                        </materialDesign:Card>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Style.Resources>
                            <!--Foreground for Selected ListViewItem-->
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" 
                                 Color="White"/>
                            <!--Background for Selected ListViewItem-->
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="White"/>
                        </Style.Resources>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <Button Grid.Column="1" Height="90" Width="90" VerticalAlignment="Top" Margin="15 10 10 10" Visibility="{Binding ElementName=scro, Path=ComputedHorizontalScrollBarVisibility}" Click="btnNewOrder_Click" Background="#e7e7e7" BorderThickness="0">
                <materialDesign:PackIcon Kind="Plus"  Grid.Column="2" Opacity=".76" HorizontalAlignment="Center" VerticalAlignment="Center" Width="50" Height="50" />
            </Button>
        </Grid>
        <Border Grid.Row="2"  Grid.ColumnSpan="2" Background="{StaticResource PrimaryHueMidBrush}" Height="2"></Border>
        <Border Grid.Row="3" Grid.RowSpan="2" Grid.ColumnSpan="2" Margin="10" Padding="10 10 10 0" Background="White" CornerRadius="3" BorderBrush="LightGray" BorderThickness="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid Margin="0 0 0 10">
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="20"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <controls:TrueVisible x:Key="TrueVisible"/>
                        <controls:FalseVisible x:Key="FalseVisible"/>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Margin="10 5" Visibility="{Binding ApplyBackInfo.IsHandOrder,Converter={StaticResource TrueVisible}}"  HorizontalAlignment="Right">申退科室：</TextBlock>
                    <ComboBox x:Name="txtDept" Grid.Row="0" Grid.Column="1" Visibility="{Binding ApplyBackInfo.IsHandOrder,Converter={StaticResource TrueVisible}}" FontSize="20"  Margin="0 0 20 0" ItemsSource="{Binding Depts}"  DisplayMemberPath="officeName" SelectedValuePath="id" SelectionChanged="ComboBoxDept_SelectionChanged"></ComboBox>
                    <TextBlock  Grid.Column="2" Margin="10 5" Visibility="{Binding ApplyBackInfo.IsHandOrder,Converter={StaticResource TrueVisible}}" HorizontalAlignment="Right">申退库房：</TextBlock>
                    <ComboBox x:Name="txtStock" Grid.Column="3"  FontSize="20" Visibility="{Binding ApplyBackInfo.IsHandOrder,Converter={StaticResource TrueVisible}}" Margin="0 0 20 0" ItemsSource="{Binding Stocks}" DisplayMemberPath="storehouseName" SelectedValuePath="id" ></ComboBox>
                    <TextBlock Grid.Row="1" Grid.Column="0" Visibility="{Binding ApplyBackInfo.IsHandOrder,Converter={StaticResource TrueVisible}}" Margin="10 5">入库库房：</TextBlock>
                    <TextBlock x:Name="txthouse1" Grid.Row="1" Grid.Column="1" Visibility="{Binding ApplyBackInfo.IsHandOrder,Converter={StaticResource TrueVisible}}" FontSize="20"  Margin="0 0 20 0" TextTrimming="WordEllipsis" Text="{Binding ApplyBackInfo.applyStorehouseName}" ></TextBlock>
                    <TextBlock Grid.Row="1"  Grid.Column="2" Visibility="{Binding ApplyBackInfo.IsHandOrder,Converter={StaticResource TrueVisible}}" Margin="10 5" HorizontalAlignment="Right">申退人：</TextBlock>
                    <TextBlock x:Name="txtCreater1" Grid.Row="1" Grid.Column="3" Visibility="{Binding ApplyBackInfo.IsHandOrder,Converter={StaticResource TrueVisible}}" FontSize="20" Margin="0 0 20 0"  Text="{Binding ApplyBackInfo.applyName}"></TextBlock>


                    <TextBlock Grid.Row="0" Margin="10 5"  Visibility="{Binding ApplyBackInfo.IsHandOrder, Converter={StaticResource FalseVisible}}" HorizontalAlignment="Right">退库库房：</TextBlock>
                    <TextBlock Grid.Column="1"  FontSize="20"  Visibility="{Binding ApplyBackInfo.IsHandOrder, Converter={StaticResource FalseVisible}}"  Text="{Binding ApplyBackInfo.sourceStorehouseName}" Margin="0 0 20 0"  ></TextBlock>
                    <TextBlock Grid.Row="1"  Margin="10 5"  Visibility="{Binding ApplyBackInfo.IsHandOrder, Converter={StaticResource FalseVisible}}">入库库房：</TextBlock>
                    <TextBlock x:Name="txthouse" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"  Visibility="{Binding ApplyBackInfo.IsHandOrder, Converter={StaticResource FalseVisible}}"  FontSize="20"  Margin="0 0 20 0"    ></TextBlock>
                    <TextBlock Grid.Column="2" Margin="10 5"   Visibility="{Binding ApplyBackInfo.IsHandOrder, Converter={StaticResource FalseVisible}}" HorizontalAlignment="Right">申退人：</TextBlock>
                    <TextBlock Grid.Column="3" x:Name="txtCreater"   Visibility="{Binding ApplyBackInfo.IsHandOrder, Converter={StaticResource FalseVisible}}"  FontSize="20"  Margin="0 0 20 0" ></TextBlock>
                </Grid>
                <GridSplitter Width="2" Background="{StaticResource PrimaryForegroudBrush}" Grid.Column="1" HorizontalAlignment="Center"  />
                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <Button  Grid.Column="2" Margin="30 5" Width="120" FontSize="20" HorizontalAlignment="Left" Height="50" Click="btnApplyBackCheck_Click">复核确认</Button>
                    <Button x:Name="btnisHandOrder" Grid.Column="2" Margin="10 5"  HorizontalAlignment="Left" IsEnabled="{Binding ApplyBackInfo.IsHandOrder}" FontSize="20" Height="50" Click="btnDeleteHandOrder_Click">取消手工单</Button>
                </StackPanel>
                <DataGrid x:Name="mygird" Grid.Row="4"  Grid.ColumnSpan="3" Margin="5"  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                  ItemsSource="{Binding ApplyBackInfo.applyBackDtlList,Mode=TwoWay}"  ScrollViewer.PanningMode="Both"
                  materialDesign:DataGridAssist.ColumnHeaderPadding="4" 
                  CanUserAddRows="False" IsReadOnly="True"  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  SelectedValue="{Binding SelecTimeDataViewData}" 
                  AutoGenerateColumns="False" >
                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource  MaterialDesignDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsNew}" Value="true">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            <Setter Property="Background" Value="{StaticResource PrimaryHueMidBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.Resources>
                        <converter:TimeConverter x:Key="TimeConverter"/>
                        <converter:bool2AlarmColorConverter x:Key="bool2AlarmColorConverter"/>
                        <controls:NullRedConverter x:Key="ReasonNullConverter"/>
                        <controls:FalseVisible x:Key="FalseVisible"/>
                        <controls:TrueVisible x:Key="TrueVisible"/>
                        <DataTemplate x:Key="goodsNo">
                            <TextBlock  Text="{Binding goodsNo,Mode=TwoWay}" TextTrimming="WordEllipsis" VerticalAlignment="Center" FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="goodsName">
                            <TextBlock  Text="{Binding goodsName,Mode=TwoWay}" TextTrimming="WordEllipsis" VerticalAlignment="Center" FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="goodsSpec">
                            <TextBlock  Text="{Binding goodsSpec,Mode=TwoWay}" TextTrimming="WordEllipsis" VerticalAlignment="Center" FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="goodsFactoryName">
                            <TextBlock  Text="{Binding goodsFactoryName,Mode=TwoWay}" TextTrimming="WordEllipsis" VerticalAlignment="Center" FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="goodsUnit">
                            <TextBlock  Text="{Binding goodsUnit,Mode=TwoWay}" TextTrimming="WordEllipsis" VerticalAlignment="Center" FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="checkQty">
                            <TextBlock  Text="{Binding checkQty,Mode=TwoWay}" TextTrimming="WordEllipsis"  Foreground="{Binding Converter={StaticResource bool2AlarmColorConverter}}" VerticalAlignment="Center" FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="backQty">
                            <TextBlock  Text="{Binding backQty,Mode=TwoWay}" TextTrimming="WordEllipsis" VerticalAlignment="Center" FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="deliveryQtya">
                            <Ccontrol:TextBoxNumberUpADown  Text="{Binding backQty,Mode=TwoWay}" Height="auto"/>
                        </DataTemplate>

                        <DataTemplate x:Key="combReason">
                            <ComboBox x:Name="comb" Tag="{Binding}" BorderThickness="1" BorderBrush="{Binding ElementName=comb, Path=Text,Converter={StaticResource ReasonNullConverter}}" DisplayMemberPath="RValue" SelectedValuePath="RKey" ItemsSource="{Binding Reasons}" SelectionChanged="ComboBox_SelectionChanged" VerticalAlignment="Center"  FontSize="20" Height="auto"/>
                        </DataTemplate>

                        <DataTemplate x:Key="txtReason">
                            <TextBlock  Tag="{Binding}" Text="{Binding backReason}"    VerticalAlignment="Center"  FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="btnDelete">
                            <Button Content="删除" Tag="{Binding}"  VerticalAlignment="Center" IsEnabled="{Binding Converter={StaticResource btnDeteleConverter}}" Click="Button_Click" FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="lotNo">
                            <TextBlock  Text="{Binding lotNo,Mode=TwoWay}" VerticalAlignment="Center" FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="pprodDate">
                            <TextBlock  Text="{Binding pprodDate,Mode=TwoWay,Converter={StaticResource TimeConverter},StringFormat='yyyy-MM-dd'}" VerticalAlignment="Center" FontSize="20" Height="auto"/>
                        </DataTemplate>
                        <DataTemplate x:Key="pvalidDate">
                            <TextBlock  Text="{Binding pvalidDate,Mode=TwoWay,Converter={StaticResource TimeConverter},StringFormat='yyyy-MM-dd'}" VerticalAlignment="Center" FontSize="20" Height="auto"/>
                        </DataTemplate>
                    </DataGrid.Resources>
                    <DataGrid.Columns>

                        <DataGridTemplateColumn CellTemplate="{StaticResource goodsNo}" Header="商品编码" Width="*" />
                        <DataGridTemplateColumn CellTemplate="{StaticResource goodsName}" Header="商品名称" Width="*" />
                        <DataGridTemplateColumn CellTemplate="{StaticResource goodsSpec}" Header="规格" Width="*" />
                        <DataGridTemplateColumn CellTemplate="{StaticResource goodsFactoryName}" Header="厂家" Width="*" />
                        <DataGridTemplateColumn CellTemplate="{StaticResource goodsUnit}" Header="单位" Width="*" />
                        <DataGridTemplateColumn CellTemplate="{StaticResource backQty}" Header="退库数量" MinWidth="170" Width="*" />
                        <DataGridTemplateColumn CellTemplate="{StaticResource checkQty}" Header="复核数量" Width="*"/>
                        <DataGridTemplateColumn CellTemplate="{StaticResource lotNo}" Header="批号" Width="*" />
                        <DataGridTemplateColumn CellTemplate="{StaticResource pprodDate}" Header="生产日期" Width="*" />
                        <DataGridTemplateColumn CellTemplate="{StaticResource pvalidDate}" Header="有效期" Width="*" />
                        <DataGridTemplateColumn CellTemplate="{StaticResource combReason}" Visibility="{Binding Source={x:Reference btnisHandOrder}, Path=IsEnabled,Converter={StaticResource TrueVisible}}" Header="原因" Width="*"/>
                        <DataGridTemplateColumn CellTemplate="{StaticResource txtReason}" Visibility="{Binding Source={x:Reference btnisHandOrder}, Path=IsEnabled,Converter={StaticResource FalseVisible}}" Header="原因" Width="*"/>
                        <DataGridTemplateColumn CellTemplate="{StaticResource btnDelete}" Header="删除" Width="*"/>

                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Border>
    </Grid>
</UserControl>
