<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:nb="clr-namespace:MIIOT.UI.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/MIIOT.UI;Component/Styles/Default/Base.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type nb:NbMenuTabItem}">
        <Setter Property="Foreground" Value="{StaticResource Nb.Nav2.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource Nb.Nav2.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Nb.Nav2.BorderBrush}"/>
        <Setter Property="Margin" Value="0,0,12,0"/>
        <Setter Property="Padding" Value="6,0,6,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="MinWidth" Value="128"></Setter>
        <Setter Property="Width" Value="Auto"></Setter>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nb:NbMenuTabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true"
                            MinWidth="{TemplateBinding MinWidth}" 
                            Width="{TemplateBinding Width}" 
                            Margin="0,0,0,12">
                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="2" Opacity="1">
                            
                        </Border>
                        <Border x:Name="overBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="2" Opacity="0">
                            
                        </Border>
                        <Label Grid.Column="0" x:Name="contentPresenter" Opacity="1"
                                Content="{TemplateBinding Header}" Focusable="False" 
                                HorizontalContentAlignment="{TemplateBinding HorizontalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalAlignment}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0"/>

                        <Label Grid.Column="0" x:Name="overContentPresenter" Opacity="0" Foreground="{DynamicResource Nb.NormalBtn.OverForeground}"
                                Content="{TemplateBinding Header}" Focusable="False" 
                                HorizontalContentAlignment="{TemplateBinding HorizontalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalAlignment}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type nb:NbMenuTabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="mainBorder" Value="0"/>
                            <Setter Property="Opacity" TargetName="overBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0"/>
                            <Setter Property="Opacity" TargetName="overContentPresenter" Value="1"/>
                            <Setter Property="Background" TargetName="overBorder" Value="{DynamicResource Nb.NormalBtn.OverBackground}"/>
                            <Setter Property="BorderBrush" TargetName="overBorder" Value="{DynamicResource Nb.NormalBtn.OverBorderBrush}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type nb:NbMenuTabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource Nb.Disabled.Background1}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource Nb.Auxiliary.BorderBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type nb:NbMenuTabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource Nb.Nav2.Background}"/>
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource Nb.Nav2.BorderBrush}"/>
                            <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource Nb.Nav2.Foreground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type nb:NbMenuTabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource Nb.Nav2.SelectedBackground}"/>
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource Nb.Nav2.SelectedBorderBrush}"/>
                            <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource Nb.Nav2.SelectedForeground}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type nb:NbMenuTabControl}">
        <Setter Property="Padding" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource Nb.Auxiliary.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Nb.Auxiliary.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nb:NbMenuTabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <WrapPanel Grid.Column="0" Grid.Row="0"  HorizontalAlignment="Left" x:Name="headerPanel" Background="Transparent" IsItemsHost="true" Margin="12" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="12,0,12,12" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="14" Direction="-90" RenderingBias="Quality" ShadowDepth="2" Color="#000000" Opacity="0.25"/>
                            </Border.Effect>
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>