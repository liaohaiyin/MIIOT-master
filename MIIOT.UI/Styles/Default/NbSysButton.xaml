<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:nb="clr-namespace:MIIOT.UI.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/MIIOT.UI;Component/Styles/Default/Base.xaml"/>
        <ResourceDictionary Source="/MIIOT.UI;Component/Styles/Default/Icon.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type nb:NbSysButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Nb.Dominant.Foreground}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource Nb.MouseOver.Background1}"/>
        <Setter Property="PressedBackground" Value="{StaticResource Nb.Pressed.Background1}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="IconWidth" Value="12"/>
        <Setter Property="IconHeight" Value="12"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nb:NbSysButton}">
                    <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="iconCol" Width="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=Height}"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Viewbox Grid.Column="0" Stretch="Fill" Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path Data="{TemplateBinding Icon}" Fill="{TemplateBinding Foreground}">
                                </Path>
                            </Viewbox>
                            <Label Grid.Column="1" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Height="{TemplateBinding Height}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"></Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Width" TargetName="iconCol" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=MouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=PressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type nb:NbMaxSysButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Nb.Dominant.Foreground}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource Nb.MouseOver.Background1}"/>
        <Setter Property="PressedBackground" Value="{StaticResource Nb.Pressed.Background1}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="IconWidth" Value="12"/>
        <Setter Property="IconHeight" Value="12"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Command" Value="{x:Static SystemCommands.MaximizeWindowCommand}"/>
        <Setter Property="Icon" Value="{StaticResource Icon-Maximize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nb:NbSysButton}">
                    <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="iconCol" Width="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=Height}"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Viewbox Grid.Column="0" Stretch="Fill" Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path Data="{TemplateBinding Icon}" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}" StrokeThickness="1">
                                </Path>
                            </Viewbox>
                            <Label Grid.Column="1" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Height="{TemplateBinding Height}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"></Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Width" TargetName="iconCol" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=MouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=PressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=WindowState}" Value="Normal">
                <Setter Property="Command" Value="{x:Static SystemCommands.MaximizeWindowCommand}"/>
                <Setter Property="Icon" Value="{StaticResource Icon-Maximize}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=WindowState}" Value="Maximized">
                <Setter Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}"/>
                <Setter Property="Icon" Value="{StaticResource Icon-Restore}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type nb:NbCloseSysButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Nb.Dominant.Foreground}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource Nb.MouseOver.Background1}"/>
        <Setter Property="PressedBackground" Value="{StaticResource Nb.Pressed.Background1}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="IconWidth" Value="12"/>
        <Setter Property="IconHeight" Value="12"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>

        <Setter Property="Command" Value="{x:Static SystemCommands.CloseWindowCommand}"/>
        <Setter Property="Icon" Value="{StaticResource Icon-Close}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource Nb.MouseOver.Background2}"/>
        <Setter Property="PressedBackground" Value="{StaticResource Nb.Pressed.Background2}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nb:NbSysButton}">
                    <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="iconCol" Width="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=Height}"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Viewbox Grid.Column="0" Stretch="Fill" Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path Data="{TemplateBinding Icon}" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}" StrokeThickness="1">
                                </Path>
                            </Viewbox>
                            <Label Grid.Column="1" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Height="{TemplateBinding Height}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"></Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Width" TargetName="iconCol" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=MouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=PressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type nb:NbExitSysButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Nb.Login.LoginColor}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource Nb.MouseOver.Background1}"/>
        <Setter Property="PressedBackground" Value="{StaticResource Nb.Pressed.Background1}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="120"/>
        <Setter Property="IconWidth" Value="55"/>
        <Setter Property="IconHeight" Value="55"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>

        <Setter Property="Command" Value="{x:Static SystemCommands.CloseWindowCommand}"/>
        <Setter Property="Icon" Value="{StaticResource Icon-Close}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource Nb.MouseOver.Background1}"/>
        <Setter Property="PressedBackground" Value="{StaticResource Nb.MouseOver.Background1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nb:NbExitSysButton}">
                    <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" SnapsToDevicePixels="true">
                        <Grid Margin="0 0 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="iconCol" Height="*"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <!--<Viewbox Grid.Row="0" Margin="5">
                                <Path Data="{TemplateBinding Icon}" Fill="{DynamicResource Nb.Login.LoginColor}" Stretch="Fill"></Path>
                            </Viewbox>
                            <Label Grid.Row="1" FontWeight="Bold" Foreground="{DynamicResource Nb.Home.Foreground2}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"></Label>-->
                            
                            <Viewbox Grid.Row="0" Stretch="Fill" Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path Data="{TemplateBinding Icon}" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}" StrokeThickness="0.5">
                                </Path>
                            </Viewbox>
                            <Label Grid.Row="1" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" Foreground="{StaticResource Nb.Home.Foreground2}"></Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Height" TargetName="iconCol" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=MouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=PressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type nb:NbMinSysButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Nb.Dominant.Foreground}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource Nb.MouseOver.Background1}"/>
        <Setter Property="PressedBackground" Value="{StaticResource Nb.Pressed.Background1}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="IconWidth" Value="12"/>
        <Setter Property="IconHeight" Value="12"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        
        <Setter Property="Command" Value="{x:Static SystemCommands.MinimizeWindowCommand}"/>
        <Setter Property="Icon" Value="{StaticResource Icon-Minimize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nb:NbSysButton}">
                    <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="iconCol" Width="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=Height}"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Viewbox Grid.Column="0" Stretch="Fill" Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path Data="{TemplateBinding Icon}" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}" StrokeThickness="1">
                                </Path>
                            </Viewbox>
                            <Label Grid.Column="1" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Height="{TemplateBinding Height}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"></Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Width" TargetName="iconCol" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=MouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbSysButton},Path=PressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>