<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:nb="clr-namespace:MIIOT.UI.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/MIIOT.UI;Component/Styles/Default/Base.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type nb:NbButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource Nb.DefaultBtn.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource Nb.DefaultBtn.Foreground}"/>
        <Setter Property="OverBackground" Value="{StaticResource Nb.DefaultBtn.OverBackground}"/>
        <Setter Property="OverForeground" Value="{StaticResource Nb.DefaultBtn.OverForeground}"/>
        <Setter Property="PressedBackground" Value="{StaticResource Nb.DefaultBtn.PressedBackground}"/>
        <Setter Property="PressedForeground" Value="{StaticResource Nb.DefaultBtn.PressedForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nb:NbButton}">
                    <Border x:Name="border" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=nb:NbButton},Path=CornerRadius}">
                        <Grid x:Name="txtGrid">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <Viewbox x:Name="IconBox" Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Path Data="{TemplateBinding Icon}" Fill="{TemplateBinding Foreground}" Stretch="Fill"></Path>
                                </Viewbox>
                                <Grid x:Name="IconSplit" Width="5"></Grid>
                                <TextBlock x:Name="txt" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="txtGrid" Property="Background" Value="{DynamicResource Nb.BtnDisabled.Background}"/>
                            <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource Nb.BtnDisabled.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbButton}, Path=OverBackground}"/>
                            <Setter TargetName="txt" Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbButton}, Path=OverForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbButton}, Path=PressedBackground}"/>
                            <Setter TargetName="txt" Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=nb:NbButton}, Path=PressedForeground}"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IconSplit" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   

</ResourceDictionary>